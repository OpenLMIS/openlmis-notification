execution:
  - concurrency: 10
    iterations: 10
    ramp-up: 1m
    hold-for: 10m
    scenario: send-notification

scenarios:
  send-notification:
    variables:
      # srmanager4, has valid email address
      user_id: c54df462-66d8-4a02-bee9-b786fe2f30ee
    requests:
      - include-scenario: get-service-token
      - url: ${__P(base-uri)}/api/notifications
        method: POST
        label: SendNotification
        headers:
          Authorization: Bearer ${access_token}
          Content-Type: application/json
        jsr223:
          execute: before
          script-text: |
            import groovy.json.JsonOutput

            def notification = [
              userId: vars.get("user_id"),
              messages: [
                email: [
                  subject: "Send notification performance test subject",
                  body: "Send notification performance test body"
                ]
              ],
              important: "false"
            ]

            vars.put("notification", JsonOutput.toJson(notification))
        body: ${notification}

reporting:
  - module: passfail
    criteria:
      - 'SendNotification too high error rate: failures>1%, continue as failed, label=SendNotification, title="SendNotification error rate too high"'
      - 'SendNotification is too slow: p90>3000ms, stop as failed, label=SendNotification, title="SendNotification response time too high"'
      - 'SendNotification needs improvement: p90>2000ms and p90<=3000ms, continue as passed, label=SendNotification, title="SendNotification needs improvement"'
